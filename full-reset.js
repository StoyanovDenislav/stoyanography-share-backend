const Database = require("./Database/databaseClass");
require("dotenv").config();

async function fullReset() {
  const dbInstance = new Database(
    process.env.DB_HOST,
    process.env.DB_PORT,
    process.env.DB_USERNAME,
    process.env.DB_PASSWORD
  );

  const db = dbInstance.useDatabase(
    process.env.DB_NAME,
    process.env.DB_USERNAME,
    process.env.DB_PASSWORD
  );

  try {
    console.log("üóëÔ∏è  Deleting all edges and vertices...");
    
    try {
      await db.query("DELETE EDGE CollectionPhoto");
      console.log("   ‚úì Deleted CollectionPhoto edges");
    } catch (e) {
      console.log("   ‚ö†Ô∏è  No CollectionPhoto edges to delete");
    }
    
    try {
      await db.query("DELETE EDGE CollectionAccess");
      console.log("   ‚úì Deleted CollectionAccess edges");
    } catch (e) {
      console.log("   ‚ö†Ô∏è  No CollectionAccess edges to delete");
    }
    
    try {
      await db.query("DELETE VERTEX PhotoCollection UNSAFE");
      console.log("   ‚úì Deleted PhotoCollection vertices");
    } catch (e) {
      console.log("   ‚ö†Ô∏è  No PhotoCollection vertices to delete");
    }
    
    console.log("\nüî® Dropping classes...");
    
    try {
      await db.query("DROP CLASS CollectionPhoto UNSAFE");
      console.log("   ‚úì Dropped CollectionPhoto class");
    } catch (e) {
      console.log("   ‚ö†Ô∏è  CollectionPhoto class doesn't exist");
    }
    
    try {
      await db.query("DROP CLASS CollectionAccess UNSAFE");
      console.log("   ‚úì Dropped CollectionAccess class");
    } catch (e) {
      console.log("   ‚ö†Ô∏è  CollectionAccess class doesn't exist");
    }
    
    try {
      await db.query("DROP CLASS PhotoCollection UNSAFE");
      console.log("   ‚úì Dropped PhotoCollection class");
    } catch (e) {
      console.log("   ‚ö†Ô∏è  PhotoCollection class doesn't exist");
    }
    
    console.log("\n‚úÖ Full reset complete!");
    console.log("\nNow run: node migrations/006-add-photocollections.js");
    
  } catch (error) {
    console.error("‚ùå Error:", error);
  } finally {
    dbInstance.closeConnection();
    process.exit(0);
  }
}

fullReset();
